{"version":3,"sources":["tutorial/1-useState/setup/1-error-example.js","tutorial/1-useState/setup/2-useState-basics.js","data.js","tutorial/1-useState/setup/3-useState-array.js","tutorial/1-useState/setup/4-useState-object.js","tutorial/1-useState/setup/5-useState-counter.js","tutorial/2-useEffect/setup/1-useEffect-basics.js","tutorial/2-useEffect/setup/2-useEffect-cleanup.js","tutorial/2-useEffect/setup/3-useEffect-fetch-data.js","tutorial/3-conditional-rendering/setup/1-multiple-returns.js","tutorial/3-conditional-rendering/setup/2-short-circuit.js","tutorial/3-conditional-rendering/setup/3-show-hide.js","tutorial/4-forms/setup/1-controlled-inputs.js","tutorial/4-forms/setup/2-multiple-inputs.js","App.js","index.js"],"names":["ErrorExample","type","className","onClick","console","log","UseStateBasics","useState","value","setValue","data","id","name","UseStateArray","React","people","setPeople","map","person","key","oldPeople","filter","removeItem","window","location","reload","UseStateObject","age","msg","setPerson","UseStateCounter","count","setCount","setTimeout","prevCount","UseEffectBasics","useEffect","document","title","UseEffectCleanup","innerWidth","size","setSize","checkSize","addEventListener","removeEventListener","UseEffectFetchData","users","setUsers","getUsers","a","fetch","response","json","login","avatar_url","html_url","src","alt","href","MultipleReturns","isLoading","setIsLoading","isError","setIsError","user","setUser","then","resp","status","Error","statusText","catch","error","ShortCircuit","text","Item","style","marginTop","ShowHide","show","setShow","ControlledInputs","firstName","setFirstName","email","setEmail","onSubmit","e","preventDefault","Date","getTime","toString","htmlFor","onChange","target","index","handleChange","newPerson","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1be58833.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ErrorExample = () => {\r\n  let title = \"Random Text\"\r\n  const ClickBtn = () => {\r\n    console.log(title)\r\n  }\r\n  return (\r\n    <>\r\n      <p>Error Example</p>\r\n      <h2>{title}</h2>\r\n      <button type=\"button\" className='btn' onClick={ClickBtn}>\r\n        change Title\r\n      </button>\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default ErrorExample;\r\n","import React, { cloneElement, useState } from 'react';\r\n\r\nconst UseStateBasics = () => {\r\n  // console.log(useState());\r\n  const [value, setValue] = useState('old title');\r\n  // console.log(value, setValue);\r\n  const ChangeTitle = () => {\r\n    if (value === 'old title') {\r\n      setValue('new title')\r\n    }\r\n    else {\r\n      setValue('old title')\r\n    }\r\n  }\r\n  return <>\r\n  <p>useState basics</p>\r\n    <h1>{value}</h1>\r\n    <button type='button' className='btn' onClick={ChangeTitle}>\r\n      Change Title\r\n    </button>\r\n  </>;\r\n};\r\n\r\nexport default UseStateBasics;\r\n","export const data = [\r\n  { id: 1, name: 'john' },\r\n  { id: 2, name: 'peter' },\r\n  { id: 3, name: 'susan' },\r\n  { id: 4, name: 'anna' },\r\n];\r\n","import React from 'react';\r\nimport { data } from '../../../data';\r\n\r\nconst UseStateArray = () => {\r\n  const [people, setPeople] = React.useState(data)\r\n  const removeItem = (id) => {\r\n    setPeople((oldPeople)=>{\r\n      const newPeople = oldPeople.filter((person) => person.id !== id)\r\n      return newPeople\r\n    });\r\n  }\r\n  return <>\r\n  <p>useState array</p>\r\n    {/* <></> same as React.Fragment */}\r\n    {people.map((person) => {\r\n      const { id, name } = person;\r\n      return (\r\n        <div key={id} className='item'>\r\n          <h3>{id} {name}</h3>\r\n          {/* when we have an array to pe passed, it has to defined with the arrow function as shown below in onClick */}\r\n          <button type='button' onClick={() => removeItem(id)}>Remove</button>\r\n        </div>\r\n      );\r\n    })}\r\n    <button className='btn' onClick={() => setPeople([])}>\r\n      Remove All\r\n    </button>\r\n    <button className='btn' onClick={() =>{\r\n      window.location.reload();\r\n      }}>\r\n      Refresh\r\n    </button>\r\n  </>;\r\n};\r\n\r\nexport default UseStateArray;\r\n","import React, { useState } from 'react';\r\n\r\nconst UseStateObject = () => {\r\n  const data = {name:'kavan' , age :20 , msg : 'Hey'}\r\nconst [person,setPerson] = useState(data);\r\nconst changeMessage = () => {\r\n  if(person.msg === 'Hey'){\r\n  setPerson({...person , msg : 'Hello'})\r\n  //...person = sprad operator \r\n  // here '...person' will copy all the content of person for the new value and after ',' the value that you want to change will from object has to be written\r\n  // you can change more than 1 value in setPerson of object wit adding ','\r\n  }\r\n  else {\r\n    setPerson({...person , msg : 'Hey'})\r\n  }\r\n}\r\n  return <>\r\n  <p>useState object</p>\r\n   <div>\r\n     <h2>{person.name}</h2>\r\n     <h2>{person.age}</h2>\r\n     <h2>{person.msg}</h2>\r\n     <button className='btn' onClick={changeMessage}>\r\n        Change Message\r\n     </button>\r\n   </div>\r\n  </>;\r\n};\r\n\r\nexport default UseStateObject;\r\n","import React, { useState } from 'react';\r\n\r\nconst UseStateCounter = () => {\r\n  const [count,setCount] = useState(0);\r\n  const dec = () => {\r\n    setCount( count - 1 );\r\n  }\r\nconst reset = () => {\r\n    setCount( 0 );\r\n  }\r\n  const inc = () => {\r\n    setCount( count + 1 );\r\n  }\r\n  const complexInc = () => {\r\n    //synatx of setTimeout(FUNCTION,TIME(MS))\r\n    setTimeout(()=>{\r\n      // setCount(count + 1) \r\n      // the above line will work but if you click more than 1 time it will register only for 1 count as the timeout is 2sec(2000ms)\r\n\r\n\r\n      setCount((prevCount)=>{\r\n        return prevCount +1 \r\n        //the above function will work perfectly even if you press more than once as by default the setCount will get the value of count as argument \r\n        //and in our case count == prevCount it wont wait for 2sec to return the value \r\n      })\r\n    },2000);\r\n  }\r\n  return <>\r\n  <p>useState Counter</p>\r\n    <h2>Regular Counter</h2>\r\n    <h2>{count}</h2>\r\n    <button className='btn'onClick={dec}>Decrease</button>\r\n    <button className='btn'onClick={reset}>Reset</button>\r\n    <button className='btn'onClick={inc}>Increase</button>\r\n\r\n    <h2>Delay Counter</h2>\r\n    <h2>{count}</h2>\r\n    <button className='btn' onClick={complexInc}>Delay Increase</button>\r\n    \r\n</>;\r\n};\r\n\r\nexport default UseStateCounter;\r\n","import React, { useState, useEffect } from 'react';\r\nconst UseEffectBasics = () => {\r\n  const [value,setValue] = useState(0);\r\n  \r\n  // by default useEffect runs after every re-render\r\n  // cleanup function\r\n  // it can work without the second para but will reload after clicking any button\r\n  // if second parameter is empty(as an empty list) it will work only 1 time (initial time) not after that \r\n  // if second para is given as a variable and that variable's value is changed then that function will run \r\n  // in our case we will give 'value' as a para \r\n  // only when value of variable 'value' will change then and only then that function will run \r\n\r\n    // useEffect (()=>{},[]);//Syntax of use effect \r\n    useEffect (()=>{\r\n      console.log(value);\r\n      if(value > 0){\r\n        document.title = (`(${value}) New Message`)\r\n      }\r\n    },[value]);\r\n  return <>\r\n  <p>useEffect Basics</p>\r\n    <h2>{value}</h2>\r\n    <button type='button' className='btn' onClick={() => setValue(value + 1)}>Click Me</button>\r\n  </>;\r\n};\r\n\r\nexport default UseEffectBasics;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// cleanup function\r\n// second argument\r\n\r\nconst UseEffectCleanup = () => {\r\n  const [size,setSize] = useState(window.innerWidth);\r\n  const checkSize = () => {\r\n    setSize(window.innerWidth);\r\n  }\r\n  useEffect(()=>{\r\n    console.log('change');\r\n    //name of the event 'resize' is globally defined and can be found in event Listeners in the DevTools\r\n    window.addEventListener('resize',checkSize);\r\n    return(()=>{ // return in useEffect will only run when this function is invoked again  by something (return also knowns as cleanup funciton)\r\n      console.log('remove');\r\n      window.removeEventListener('resize',checkSize);\r\n      // the above line will not let the previous values to be stored\r\n    });\r\n  })\r\n  return <>\r\n    <p>useEffect Cleanup</p>\r\n    <h1>Window Size</h1>\r\n    <h3>{size} PX</h3>\r\n  </>;\r\n};\r\n\r\nexport default UseEffectCleanup;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst url = 'https://api.github.com/users';\r\n\r\nconst UseEffectFetchData = () => {\r\n  const [users,setUsers] = useState([]);\r\n  \r\n  const getUsers = async () => {\r\n    const response = await fetch(url);\r\n    const users = await response.json();\r\n    setUsers(users);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n  return <>\r\n      <p>useEffect fetch data</p>\r\n    <h3>Users</h3>\r\n    <ul className='users'>\r\n      {users.map((person) =>{\r\n        const {id,login,avatar_url,html_url} = person ;\r\n        return(\r\n          <li key = {id}>\r\n            <img src={avatar_url} alt={login} />\r\n            <div>\r\n              <h4>{login}</h4>\r\n              <a href={html_url}>Profile</a>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n    \r\n  </>;\r\n};\r\n\r\nexport default UseEffectFetchData;\r\n","import React, { useState, useEffect } from 'react';\r\nconst url = 'https://api.github.com/users/QuincyLarson';\r\nconst MultipleReturns = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [user, setUser] = useState('default user');\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((resp) => {\r\n        if (resp.status >= 200 && resp.status <= 299) { // error value if the user is not found \r\n          return resp.json();\r\n        } else {\r\n          setIsLoading(false);\r\n          setIsError(true);\r\n          throw new Error(resp.statusText);\r\n        }\r\n      })\r\n      .then((user) => {\r\n        const { login } = user;\r\n        setUser(login);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div>\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n  if (isError) {\r\n    return (\r\n      <div>\r\n        <h1>Error....</h1>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <p>Multiple returns</p>\r\n      <h1>{user}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultipleReturns;\r\n","import React, { useState } from 'react';\r\n// short-circuit evaluation\r\n// ternary operator\r\n\r\nconst ShortCircuit = () => {\r\n  const [text, setText] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // const firstValue = text || 'hello world';\r\n  // in || operator, if the 'text' is true then 'text' will be returned \r\n  // in || operator, if the 'text' is false then 'hello world' will be returned \r\n\r\n\r\n  // const secondValue = text && 'hello world';\r\n  // in && operator, if the 'text' is true then 'hello world' will be returned \r\n  // in && operator, if the 'text' is false then 'text' will be returned \r\n\r\n\r\n  return (\r\n    <>\r\n    <p>Short Circuit</p>\r\n      {/* <h1>{firstValue}</h1>\r\n      <h1>value : {secondValue}</h1> */}\r\n      \r\n      <h1>{text || 'john doe'}</h1>\r\n      <button className='btn' onClick={() => setIsError(!isError)}>\r\n        toggle error\r\n      </button>\r\n      {isError && <h1>Error...</h1>}\r\n\r\n      {/* simple ternary operator  */}\r\n      {isError ? \r\n      // true part \r\n      (\r\n        <p>there is an error...</p>\r\n      ) : \r\n      // false part \r\n      (\r\n        <div>\r\n          <h2>there is no error</h2>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ShortCircuit;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst ShowHide = () => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <>\r\n    <p>Show Hide </p>\r\n      <button className='btn' onClick={() => setShow(!show)}>\r\n        show/hide\r\n      </button>\r\n      {show && <Item />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Item = () => {\r\n  const [size, setSize] = useState(window.innerWidth);\r\n  const checkSize = () => {\r\n    setSize(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener('resize', checkSize);\r\n    return () => { //clean up function \r\n      window.removeEventListener('resize', checkSize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginTop: '2rem' }}>\r\n      <h1>Window</h1>\r\n      <h2>size : {size}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowHide;\r\n","import React, { useState } from 'react';\r\n// JS\r\n// const input = document.getElementById('myText');\r\n// const inputValue = input.value\r\n\r\n// React\r\n// value, onChange\r\n\r\nconst ControlledInputs = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [people, setPeople] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //without the above line JS will refresh the page once the submit button is pressed \r\n\r\n    if (firstName && email) {\r\n      const person = { id: new Date().getTime().toString(), firstName:firstName, email:email };\r\n      // const person = { id: new Date().getTime().toString(), fName:firstName, mail:email };\r\n      //above both lines will work\r\n\r\n      console.log(person);\r\n      setPeople((people) => {\r\n        return [...people, person];\r\n        // ...people will include the previous values in people and peorsaon will be added to that object \r\n      });\r\n      setFirstName('');\r\n      setEmail('');\r\n    } else {\r\n      console.log('empty values');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <p>Controlled Inputs</p>\r\n      <article>\r\n        <form className='form' onSubmit={handleSubmit}>\r\n          <div className='form-control'>\r\n            <label htmlFor='firstName'>Name : </label>\r\n            <input\r\n              type='text'\r\n              id='fName'\r\n              name='fName' // name is not used in this example anywhere it will be used in 2 - multiple inputs\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n              // without onChange in react you wont be able to write in the input box \r\n              //.target.value will get the value that is written by the user and will be printed in the input box\r\n              //.value means itwill get the value written inside the box \r\n            />\r\n          </div>\r\n          <div className='form-control'>\r\n            <label htmlFor='email'>Email : </label>\r\n            <input\r\n              type='email'\r\n              id='mail'\r\n              name='mail'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type='submit'>add person</button>\r\n        </form>\r\n        {people.map((person, index) => {\r\n          const { id, firstName, email } = person;\r\n          //the variable above should be same as that of defined in person \r\n          return (\r\n            <div className='item' key={id}>\r\n              <h4>{firstName}</h4>\r\n              <p>{email}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ControlledInputs;\r\n","import React, { useState } from 'react';\r\n// JS\r\n// const input = document.getElementById('myText');\r\n// const inputValue = input.value\r\n// React\r\n// value, onChange\r\n\r\nconst ControlledInputs = () => {\r\n  const [person, setPerson] = useState({ firstName: '', email: '', age: '' });\r\n  const [people, setPeople] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    // In 'e.target.name' means it will get the name of the input ex. from line 42,52,etc\r\n\r\n    const value = e.target.value;\r\n    // In 'e.target.value' means it will get thet valur that is written by the user in the input box\r\n\r\n    setPerson({ ...person, [name]: value });\r\n    // by writting name in [] it will take the particular name of the input box \r\n    // otherwise it would take 'name' as a variable in new object and overwrite it always\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (person.firstName && person.email && person.age) {\r\n      const newPerson = { ...person, id: new Date().getTime().toString() };\r\n      setPeople([...people, newPerson]);\r\n      setPerson({ firstName: '', email: '', age: '' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p>Multiple Controlled Inputs</p>\r\n      <article className='form'>\r\n        <form>\r\n          <div className='form-control'>\r\n            <label htmlFor='firstName'>Name : </label>\r\n            <input\r\n              type='text'\r\n              id='firstName'\r\n              name='firstName'\r\n              value={person.firstName}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='form-control'>\r\n            <label htmlFor='email'>Email : </label>\r\n            <input\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              value={person.email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='form-control'>\r\n            <label htmlFor='age'>Age : </label>\r\n            <input\r\n              type='number'\r\n              id='age'\r\n              name='age'\r\n              value={person.age}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button type='submit' className='btn' onClick={handleSubmit}>\r\n            add person\r\n          </button>\r\n        </form>\r\n      </article>\r\n      <article>\r\n        {people.map((person) => {\r\n          const { id, firstName, email, age } = person;\r\n          return (\r\n            <div key={id} className='item'>\r\n              <h4>{firstName}</h4>\r\n              <p>{email}</p>\r\n              <p>{age}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ControlledInputs;\r\n","import React from 'react'\r\n//edit imports here \r\nimport Source11 from './tutorial/1-useState/setup/1-error-example'\r\nimport Source12 from './tutorial/1-useState/setup/2-useState-basics'\r\nimport Source13 from './tutorial/1-useState/setup/3-useState-array'\r\nimport Source14 from './tutorial/1-useState/setup/4-useState-object'\r\nimport Source15 from './tutorial/1-useState/setup/5-useState-counter'\r\n\r\nimport Source21 from './tutorial/2-useEffect/setup/1-useEffect-basics'\r\nimport Source22 from './tutorial/2-useEffect/setup/2-useEffect-cleanup'\r\nimport Source23 from './tutorial/2-useEffect/setup/3-useEffect-fetch-data'\r\n\r\nimport Source31 from './tutorial/3-conditional-rendering/setup/1-multiple-returns'\r\nimport Source32 from './tutorial/3-conditional-rendering/setup/2-short-circuit'\r\nimport Source33 from './tutorial/3-conditional-rendering/setup/3-show-hide'\r\n\r\nimport Source41 from './tutorial/4-forms/setup/1-controlled-inputs'\r\nimport Source42 from './tutorial/4-forms/setup/2-multiple-inputs'\r\nimport Final42 from './tutorial/4-forms/final/2-multiple-inputs'\r\n\r\nfunction App() {\r\n  return (\r\n  <>\r\n  {/* Same as React.Fragment  */}\r\n    <Source11/>\r\n    <Source12/>\r\n    <Source13/>\r\n    <Source14/>\r\n    <Source15/>\r\n\r\n    <Source21/>\r\n    <Source22/>\r\n    <Source23/>\r\n\r\n    <Source31/>\r\n    <Source32/>\r\n    <Source33/>\r\n\r\n    <Source41/>\r\n    <Source42/>\r\n    {/* <Final42/> */}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// nothing to edit here \r\n// go to App.js\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}