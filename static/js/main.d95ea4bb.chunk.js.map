{"version":3,"sources":["tutorial/1-useState/setup/1-error-example.js","tutorial/1-useState/setup/2-useState-basics.js","data.js","tutorial/1-useState/setup/3-useState-array.js","tutorial/1-useState/setup/4-useState-object.js","tutorial/1-useState/setup/5-useState-counter.js","App.js","index.js"],"names":["ErrorExample","type","className","onClick","console","log","UseStateBasics","useState","value","setValue","data","id","name","UseStateArray","React","people","setPeople","map","person","key","oldPeople","filter","removeItem","window","location","reload","UseStateObject","age","msg","setPerson","UseStateCounter","count","setCount","setTimeout","prevCount","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAmBeA,G,MAjBM,WAKnB,OACE,oCACE,4BANQ,eAOR,4BAAQC,KAAK,SAASC,UAAU,MAAMC,QANzB,WACfC,QAAQC,IAFE,iBAOR,mB,OCYSC,EApBQ,WAAM,MAEDC,mBAAS,aAFR,mBAEpBC,EAFoB,KAEbC,EAFa,KAY3B,OAAO,oCACL,4BAAKD,GACL,4BAAQP,KAAK,SAASC,UAAU,MAAMC,QAVpB,WAEhBM,EADY,cAAVD,EACO,YAGA,eAKX,kBChBSE,EAAO,CAClB,CAAEC,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SC8BFC,EA/BO,WAAO,IAAD,EACEC,IAAMP,SAASG,GADjB,mBACnBK,EADmB,KACXC,EADW,KAQ1B,OAAO,oCAEJD,EAAOE,KAAI,SAACC,GAAY,IACfP,EAAaO,EAAbP,GAAIC,EAASM,EAATN,KACZ,OACE,yBAAKO,IAAKR,EAAIT,UAAU,QACtB,4BAAKS,EAAL,IAAUC,GAEV,4BAAQX,KAAK,SAASE,QAAS,kBAdpB,SAACQ,GAClBK,GAAU,SAACI,GAET,OADkBA,EAAUC,QAAO,SAACH,GAAD,OAAYA,EAAOP,KAAOA,QAYpBW,CAAWX,KAAhD,cAIN,4BAAQT,UAAU,MAAMC,QAAS,kBAAMa,EAAU,MAAjD,cAGA,4BAAQd,UAAU,MAAMC,QAAS,WAC/BoB,OAAOC,SAASC,WADlB,a,OCEWC,EA1BQ,WACrB,IAD2B,EAEFnB,mBADZ,CAACK,KAAK,QAAUe,IAAK,GAAKC,IAAM,QADlB,mBAEtBV,EAFsB,KAEfW,EAFe,KAc3B,OAAO,oCACN,6BACE,4BAAKX,EAAON,MACZ,4BAAKM,EAAOS,KACZ,4BAAKT,EAAOU,KACZ,4BAAQ1B,UAAU,MAAMC,QAhBP,WACF,QAAfe,EAAOU,IACVC,EAAU,2BAAIX,GAAL,IAAcU,IAAM,WAM3BC,EAAU,2BAAIX,GAAL,IAAcU,IAAM,WAQ5B,qBCoBUE,EAvCS,WAAO,IAAD,EACHvB,mBAAS,GADN,mBACrBwB,EADqB,KACfC,EADe,KAyB5B,OAAO,oCACL,+CACA,4BAAKD,GACL,4BAAQ7B,UAAU,MAAKC,QA1Bb,WACV6B,EAAUD,EAAQ,KAyBlB,YACA,4BAAQ7B,UAAU,MAAKC,QAxBb,WACV6B,EAAU,KAuBV,SACA,4BAAQ9B,UAAU,MAAKC,QAtBb,WACV6B,EAAUD,EAAQ,KAqBlB,YAEA,6CACA,4BAAKA,GACL,4BAAQ7B,UAAU,MAAMC,QAvBP,WAEjB8B,YAAW,WAKTD,GAAS,SAACE,GACR,OAAOA,EAAW,OAIpB,OAWF,oBCnBWC,MAXf,WACE,OAAQ,oCACN,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCPJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d95ea4bb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ErrorExample = () => {\r\n  let title = \"Random Text\"\r\n  const ClickBtn = () => {\r\n    console.log(title)\r\n  }\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      <button type=\"button\" className='btn' onClick={ClickBtn}>\r\n        change Title\r\n      </button>\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default ErrorExample;\r\n","import React, { cloneElement, useState } from 'react';\r\n\r\nconst UseStateBasics = () => {\r\n  // console.log(useState());\r\n  const [value, setValue] = useState('old title');\r\n  // console.log(value, setValue);\r\n  const ChangeTitle = () => {\r\n    if (value === 'old title') {\r\n      setValue('new title')\r\n    }\r\n    else {\r\n      setValue('old title')\r\n    }\r\n  }\r\n  return <>\r\n    <h1>{value}</h1>\r\n    <button type='button' className='btn' onClick={ChangeTitle}>\r\n      Change Title\r\n    </button>\r\n  </>;\r\n};\r\n\r\nexport default UseStateBasics;\r\n","export const data = [\r\n  { id: 1, name: 'john' },\r\n  { id: 2, name: 'peter' },\r\n  { id: 3, name: 'susan' },\r\n  { id: 4, name: 'anna' },\r\n];\r\n","import React from 'react';\r\nimport { data } from '../../../data';\r\n\r\nconst UseStateArray = () => {\r\n  const [people, setPeople] = React.useState(data)\r\n  const removeItem = (id) => {\r\n    setPeople((oldPeople)=>{\r\n      const newPeople = oldPeople.filter((person) => person.id !== id)\r\n      return newPeople\r\n    });\r\n  }\r\n  return <>\r\n    {/* <></> same as React.Fragment */}\r\n    {people.map((person) => {\r\n      const { id, name } = person;\r\n      return (\r\n        <div key={id} className='item'>\r\n          <h3>{id} {name}</h3>\r\n          {/* when we have an array to pe passed, it has to defined with the arrow function as shown below in onClick */}\r\n          <button type='button' onClick={() => removeItem(id)}>Remove</button>\r\n        </div>\r\n      );\r\n    })}\r\n    <button className='btn' onClick={() => setPeople([])}>\r\n      Remove All\r\n    </button>\r\n    <button className='btn' onClick={() =>{\r\n      window.location.reload();\r\n      }}>\r\n      Refresh\r\n    </button>\r\n  </>;\r\n};\r\n\r\nexport default UseStateArray;\r\n","import React, { useState } from 'react';\r\n\r\nconst UseStateObject = () => {\r\n  const data = {name:'kavan' , age :20 , msg : 'Hey'}\r\nconst [person,setPerson] = useState(data);\r\nconst changeMessage = () => {\r\n  if(person.msg === 'Hey'){\r\n  setPerson({...person , msg : 'Hello'})\r\n  //...person = sprad operator \r\n  // here '...person' will copy all the content of person for the new value and after ',' the value that you want to change will from object has to be written\r\n  // you can change more than 1 value in setPerson of object wit adding ','\r\n  }\r\n  else {\r\n    setPerson({...person , msg : 'Hey'})\r\n  }\r\n}\r\n  return <>\r\n   <div>\r\n     <h2>{person.name}</h2>\r\n     <h2>{person.age}</h2>\r\n     <h2>{person.msg}</h2>\r\n     <button className='btn' onClick={changeMessage}>\r\n        Change Message\r\n     </button>\r\n   </div>\r\n  </>;\r\n};\r\n\r\nexport default UseStateObject;\r\n","import React, { useState } from 'react';\r\n\r\nconst UseStateCounter = () => {\r\n  const [count,setCount] = useState(0);\r\n  const dec = () => {\r\n    setCount( count - 1 );\r\n  }\r\nconst reset = () => {\r\n    setCount( 0 );\r\n  }\r\n  const inc = () => {\r\n    setCount( count + 1 );\r\n  }\r\n  const complexInc = () => {\r\n    //synatx of setTimeout(FUNCTION,TIME(MS))\r\n    setTimeout(()=>{\r\n      // setCount(count + 1) \r\n      // the above line will work but if you click more than 1 time it will register only for 1 count as the timeout is 2sec(2000ms)\r\n\r\n\r\n      setCount((prevCount)=>{\r\n        return prevCount +1 \r\n        //the above function will work perfectly even if you press more than once as by default the setCount will get the value of count as argument \r\n        //and in our case count == prevCount it wont wait for 2sec to return the value \r\n      })\r\n    },2000);\r\n  }\r\n  return <>\r\n    <h2>Regular Counter</h2>\r\n    <h2>{count}</h2>\r\n    <button className='btn'onClick={dec}>Decrease</button>\r\n    <button className='btn'onClick={reset}>Reset</button>\r\n    <button className='btn'onClick={inc}>Increase</button>\r\n\r\n    <h2>Delay Counter</h2>\r\n    <h2>{count}</h2>\r\n    <button className='btn' onClick={complexInc}>Delay Increase</button>\r\n    \r\n</>;\r\n};\r\n\r\nexport default UseStateCounter;\r\n","import React from 'react'\r\nimport Source11 from './tutorial/1-useState/setup/1-error-example'\r\nimport Source12 from './tutorial/1-useState/setup/2-useState-basics'\r\nimport Source13 from './tutorial/1-useState/setup/3-useState-array'\r\nimport Source14 from './tutorial/1-useState/setup/4-useState-object'\r\nimport Source15 from './tutorial/1-useState/setup/5-useState-counter'\r\nfunction App() {\r\n  return (<>\r\n    <Source11/>\r\n    <Source12/>\r\n    <Source13/>\r\n    <Source14/>\r\n    <Source15/>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}